{
  "filename": "07-Install-Docker-Registry.md",
  "__html": "<h1 id=\"%E4%B8%83%E3%80%81-%E5%AE%89%E8%A3%85-docker-registry%E7%A7%81%E6%9C%8D\">七、 安装 Docker Registry私服 <a class=\"header-anchor\" href=\"#%E4%B8%83%E3%80%81-%E5%AE%89%E8%A3%85-docker-registry%E7%A7%81%E6%9C%8D\">#</a></h1>\n<p>这是最简洁最原始的方式，使用docker官方的提供的registry来搭建私服。优点是纯净、简洁，缺点是没有可视化界面、没有权限验证模块。</p>\n<h3 id=\"1.-%E5%AE%89%E8%A3%85\">1. 安装 <a class=\"header-anchor\" href=\"#1.-%E5%AE%89%E8%A3%85\">#</a></h3>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 安装运行 Registry</span>\ndocker run -d \\\n  --publish 5000:5000 \\ \n  --volume /usr/local/registry/data:/var/lib/registry \\\n  --privileged=true \\\n  --restart=always \\\n  --name registry \\\n  registry:2\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 测试向私服推送镜像</span>\ndocker pull alpine\ndocker tag alpine:latest 192.168.137.102:5000/alpine:latest\ndocker push 192.168.137.102:5000/alpine:latest\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 跳过Https限制</span>\nvim /etc/docker/daemon.json\n{\n  \"registry-mirrors\": [\"https://rv4ppfhe.mirror.aliyuncs.com\"],\n  \"exec-opts\": [\"native.cgroupdriver=systemd\"],\n  \"insecure-registries\": [\n        \"192.168.137.101:5000\",\n        \"192.168.137.102:5000\"\n  ]\n}\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 查看所有镜像</span>\ncurl -X GET http://192.168.137.102:5000/v2/_catalog\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 查看指定镜像的所有版本</span>\ncurl -X GET http://192.168.137.102:5000/v2/alpine/tags/list\n</code></pre>\n<p>访问Web: <a href=\"http://192.168.137.102:5000/v2/\">http://192.168.137.102:5000/v2/</a></p>\n<h3 id=\"2.-%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81%E8%AE%A4%E8%AF%81(%E8%B7%B3%E8%BF%87)\">2. 登录密码认证(跳过) <a class=\"header-anchor\" href=\"#2.-%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81%E8%AE%A4%E8%AF%81(%E8%B7%B3%E8%BF%87)\">#</a></h3>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 停止并删除容器</span>\ndocker stop registry &amp;&amp; docker rm registry\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 创建保存账号密码的文件</span>\nmkdir /usr/local/registry/auth\ndocker run --entrypoint htpasswd registry -Bbn admin admin &gt; /usr/local/registry/auth/htpasswd\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 重新启动容器</span>\ndocker run -d \\\n  --publish 5000:5000 \\ \n  --volume /usr/local/registry/data:/var/lib/registry \\\n  --volume /usr/local/registry/auth:/auth \\\n  --env \"REGISTRY_AUTH=htpasswd\" \\\n  --env \"REGISTRY_AUTH_HTPASSWD_REALM=Registry Realm\" \\\n  --env  REGISTRY_AUTH_HTPASSWD_PATH=/auth/htpasswd \\\n  --privileged=true \\\n  --restart=always \\\n  --name registry \\\n  registry:2\n</code></pre>\n<h3 id=\"3.-%E5%88%A0%E9%99%A4%E5%B7%B2%E7%BB%8F%E4%B8%8A%E4%BC%A0%E7%9A%84%E9%95%9C%E5%83%8F\">3. 删除已经上传的镜像 <a class=\"header-anchor\" href=\"#3.-%E5%88%A0%E9%99%A4%E5%B7%B2%E7%BB%8F%E4%B8%8A%E4%BC%A0%E7%9A%84%E9%95%9C%E5%83%8F\">#</a></h3>\n<ol>\n<li>打开镜像的存储目录，如有-V操作打开挂载目录也可以，删除镜像文件夹</li>\n</ol>\n<blockquote>\n<p>docker exec &lt;容器名&gt; rm -rf /var/lib/registry/docker/registry/v2/repositories/&lt;镜像名&gt;</p>\n</blockquote>\n<ol start=\"2\">\n<li>执行垃圾回收操作，注意2.4版本以上的registry才有此功能</li>\n</ol>\n<blockquote>\n<p>docker exec registry bin/registry garbage-collect /etc/docker/registry/config.yml</p>\n</blockquote>\n",
  "link": "/en-us/docs/CI-CD/07-Install-Docker-Registry.html",
  "meta": {}
}