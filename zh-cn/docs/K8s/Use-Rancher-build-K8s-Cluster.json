{
  "filename": "Use-Rancher-build-K8s-Cluster.md",
  "__html": "<p><a href=\"https://blog.csdn.net/cqconelin/article/details/130056661\">使用Rancher搭建K8s集群</a></p>\n<h1 id=\"%E4%B8%80%E3%80%81%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE\">一、集群配置 <a class=\"header-anchor\" href=\"#%E4%B8%80%E3%80%81%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE\">#</a></h1>\n<ul>\n<li>Rancher version: 2.6.3</li>\n<li>Server:</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Node</th>\n<th>CPU</th>\n<th>Memory</th>\n<th>Disk</th>\n<th>OS</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>k8s-master</td>\n<td>16 Core</td>\n<td>16G</td>\n<td>80G</td>\n<td>CentOS 7.5</td>\n</tr>\n<tr>\n<td>k8s-node-1</td>\n<td>16 Core</td>\n<td>16G</td>\n<td>80G</td>\n<td>CentOS 7.5</td>\n</tr>\n<tr>\n<td>k8s-node-2</td>\n<td>16 Core</td>\n<td>16G</td>\n<td>80G</td>\n<td>CentOS 7.5</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"%E4%BA%8C%E3%80%81%E7%8E%AF%E5%A2%83%E5%88%9D%E5%A7%8B%E5%8C%96\">二、环境初始化 <a class=\"header-anchor\" href=\"#%E4%BA%8C%E3%80%81%E7%8E%AF%E5%A2%83%E5%88%9D%E5%A7%8B%E5%8C%96\">#</a></h1>\n<ol>\n<li>\n<p>将桥接的IPv4流量传递到iptables的链，并修改 <code>/etc/sysctl.conf</code></p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 修改/etc/sysctl.conf</span>\ncat &gt; /etc/sysctl.conf &lt;&lt; EOF\nnet.ipv4.ip_forward = 1\nnet.bridge.bridge-nf-call-iptables = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nEOF\n<span class=\"hljs-meta\">\n#</span><span class=\"bash\"> 生效，如果报错可以在docker安装完成后再执行改命令</span>\nsysctl -p /etc/sysctl.conf\n</code></pre>\n</li>\n<li>\n<p>关闭防火墙和Swap分区</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 关闭防火墙</span>\nsystemctl stop firewalld &amp;&amp; systemctl disable firewalld\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 关闭selinux</span>\nsed -i 's/enforcing/disabled/' /etc/selinux/config &amp;&amp; setenforce 0 # 永久\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 看/etc/selinux/config文件中SELINUX=disabled 即可</span>\nsed -i 's/permissive/disabled/' /etc/selinux/config &amp;&amp; setenforce 0\n<span class=\"hljs-meta\">#</span><span class=\"bash\"><span class=\"hljs-comment\"># 关闭swap</span></span>\nswapoff -a &amp;&amp; sed -ri 's/.*swap.*/#&amp;/' /etc/fstab\n</code></pre>\n</li>\n<li>\n<p>时间同步</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 时间同步</span>\nyum install ntpdate -y\nntpdate time.windows.com\n</code></pre>\n</li>\n<li>\n<p>设置服务器节点名称</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 设置服务器节点名称</span>\nhostnamectl set-hostname k8s-master\nbash\n</code></pre>\n</li>\n</ol>\n<h1 id=\"%E4%B8%89%E3%80%81docker%E5%AE%89%E8%A3%85\">三、Docker安装 <a class=\"header-anchor\" href=\"#%E4%B8%89%E3%80%81docker%E5%AE%89%E8%A3%85\">#</a></h1>\n<ol>\n<li>\n<p>删除已存在的Docker</p>\n<pre><code class=\"language-shell\">yum remove docker \\\n    docker-client \\\n    docker-client-latest \\\n    docker-common \\\n    docker-latest \\\n    docker-latest-logrotate \\\n    docker-logrotate \\\n    docker-selinux \\\n    docker-engine-selinux \\\n    docker-engine\n</code></pre>\n</li>\n<li>\n<p>配置repo源和epel源</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 先备份原来的源</span>\nmv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup 下载新的 CentOS-Base.repo 到 /etc/yum.repos.d/\nwget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo\n或\ncurl -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 运行 yum makecache 生成缓存</span>\nyum makecache \n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 安装epel源</span>\nyum -y install epel-release\nyum的'--showduplicates'选项对于显示软件包的多个版本很有用。当您有非常特定的依赖项并尝试查找要\n安装的软件包的特定名称时，它将起着非常大的作用\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> yum list docker --show-duplicates</span>\n</code></pre>\n</li>\n<li>\n<p>安装依赖</p>\n<pre><code class=\"language-shell\">yum -y install yum-utils device-mapper-persistent-data lvm2\n</code></pre>\n</li>\n<li>\n<p>添加Docker源</p>\n<pre><code class=\"language-shell\">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n</code></pre>\n</li>\n<li>\n<p>安装Docker</p>\n<pre><code class=\"language-shell\">yum makecache fast\nyum -y install docker-ce-19.03.15-3.el7\n</code></pre>\n</li>\n<li>\n<p>配置Docker</p>\n<p>可参考<a href=\"https://www.cnblogs.com/myitnews/p/11509546.html\">阿里云镜像加速配置</a></p>\n<pre><code class=\"language-shell\">mkdir -p /etc/docker/\ncat &gt; /etc/docker/daemon.json &lt;&lt; EOF\n{\n\"registry-mirrors\": [\"https://9cpn8tt6.mirror.aliyuncs.com\"]\n}\nEOF\n</code></pre>\n</li>\n<li>\n<p>启动docker</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> 添加开启启动</span>\nsystemctl enable docker\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 更新xfsprogs</span>\nyum -y update xfsprogs\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 启动</span>\nsystemctl start docker\ndocker info\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 测试docker是否已经能够正常使用</span>\n<span class=\"hljs-meta\">#</span><span class=\"bash\"> 启动第一个容器</span>\ndocker run hello-world\n</code></pre>\n</li>\n</ol>\n<h1 id=\"%E5%9B%9B%E3%80%81%E5%90%AF%E5%8A%A8rancher\">四、启动Rancher <a class=\"header-anchor\" href=\"#%E5%9B%9B%E3%80%81%E5%90%AF%E5%8A%A8rancher\">#</a></h1>\n<ol>\n<li>\n<p>启动rancher\n启动时需要添加 <code>--privileged</code> 参数</p>\n<pre><code class=\"language-shell\"><span class=\"hljs-meta\">#</span><span class=\"bash\"> docker run -d --restart=unless-stopped --privileged --name rancher -p 80:80 -p 443:443 rancher/rancher:stable</span>\n</code></pre>\n</li>\n<li>\n<p>查看日志</p>\n<pre><code>如果没有明显的错误就运行成功了\n# docker logs -f rancher\n</code></pre>\n</li>\n<li>\n<p>查看运行状态</p>\n<pre><code># docker ps\n</code></pre>\n</li>\n<li>\n<p>在Web界面登录</p>\n<pre><code>https://rancherIp:7643\n</code></pre>\n</li>\n</ol>\n<h1 id=\"%E4%BA%94%E3%80%81k8s%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86\">五、K8s集群管理 <a class=\"header-anchor\" href=\"#%E4%BA%94%E3%80%81k8s%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86\">#</a></h1>\n<ol>\n<li>添加一个K8s集群</li>\n<li>选择自定义</li>\n<li>编写集群信息\n<ol>\n<li>输入集群名称</li>\n<li>选择K8s版本</li>\n<li>选择网络类型 Flannel</li>\n<li>点击下一步</li>\n<li>创建Master节点时上面三个组件（etcd controlPlane Worker）全部勾选，设置Master节点的名称 k8s-master</li>\n<li>复制下面的docker命令在master节点服务器上运行</li>\n<li>点击完成，进入管理页面等待程序启动完成</li>\n<li>集群状态变换成<code>Active</code>表示启动完成</li>\n</ol>\n</li>\n<li>worker-node添加\n各节点服务器环境及Docker配置好后，运行下面命令加入到K8s集群<pre><code class=\"language-shell\">docker run -d --privileged \\\n--restart=unless-stopped \\\n--net=host \\\n-v /etc/kubernetes:/etc/kubernetes \n-v /var/run:/var/run rancher/rancher-agent:v2.6.3 \\\n--server https://internal.pisx.com:7643 \\\n--token f4jlvlq88xmfdspqbbv67***************kzmw7sqvqt4z6zshw54 \\\n--ca-checksum 82740ea67cd0fe54768778****************c95ceb06266c34ed979b80c29b0 \\\n--node-name k8s-node-1 --worker\n</code></pre>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>主机名</th>\n<th>组件</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>--node-name k8s-node-1</td>\n<td>--etcd --controlplane --worker</td>\n</tr>\n<tr>\n<td>--node-name k8s-node-2</td>\n<td>--etcd --controlplane --worker</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"%E5%85%AD%E3%80%81kubectl%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85\">六、Kubectl工具的安装 <a class=\"header-anchor\" href=\"#%E5%85%AD%E3%80%81kubectl%E5%B7%A5%E5%85%B7%E7%9A%84%E5%AE%89%E8%A3%85\">#</a></h1>\n<p>这里是将kubectl工具安装在master上</p>\n<ol>\n<li>\n<p>安装wget</p>\n<pre><code>yum install -y wget\n</code></pre>\n</li>\n<li>\n<p>下载kubectl</p>\n<pre><code>wget https://storage.googleapis.com/kubernetes-release/release/v1.18.20/bin/linux/amd64/kubectl\n</code></pre>\n</li>\n<li>\n<p>加x权限</p>\n<pre><code>chmod +x kubectl\n</code></pre>\n</li>\n<li>\n<p>将kubectl移到PATH中</p>\n<pre><code>mv kubectl /usr/local/bin/\n</code></pre>\n</li>\n<li>\n<p>查看版本</p>\n<pre><code>kubectl version --client\n</code></pre>\n</li>\n<li>\n<p>创建kube目录</p>\n<pre><code>mkdir ~/.kube\n</code></pre>\n</li>\n<li>\n<p>编辑~/.kube/config文件</p>\n<pre><code>vi ~/.kube/config\n</code></pre>\n<p>在Rancher页面中复制配置文件到剪贴板</p>\n<p>然后复制到config文件中，并保存退出。</p>\n</li>\n<li>\n<p>查看全部Pod状态</p>\n<pre><code>kubectl get pods -A\n</code></pre>\n</li>\n</ol>\n<p>至此Rancher搭建k8s集群完成！</p>\n",
  "link": "/zh-cn/docs/K8s/Use-Rancher-build-K8s-Cluster.html",
  "meta": {}
}